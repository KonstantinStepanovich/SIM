#ifndef _InputOIS_Commands_hpp_
#define _InputOIS_Commands_hpp_

namespace Sim
{

namespace InputOIS
{

enum Command
{
	COMMAND_VOID = -1,
	COMMAND_NULL = 0,
	COMMAND_PAUSE = COMMAND_NULL,
	COMMAND_DECELLERATE_MODEL_TIME,
	COMMAND_ACELLERATE_MODEL_TIME,
	COMMAND_NORMALIZE_MODEL_TIME,
	COMMAND_RELOAD,

	COMMAND_AIRPLANE_AILERONS,
	COMMAND_AIRPLANE_RUDDER,
	COMMAND_AIRPLANE_ELEVATOR,	
	COMMAND_AIRPLANE_THROTTLE,

	COMMAND_AIRPLANE_AILERONS_LEFT,
	COMMAND_AIRPLANE_AILERONS_LEFT_RELEASE,
	COMMAND_AIRPLANE_AILERONS_RIGHT,
	COMMAND_AIRPLANE_AILERONS_RIGHT_RELEASE,
	COMMAND_AIRPLANE_RUDDER_LEFT,
	COMMAND_AIRPLANE_RUDDER_LEFT_RELEASE,
	COMMAND_AIRPLANE_RUDDER_RIGHT,
	COMMAND_AIRPLANE_RUDDER_RIGHT_RELEASE,
	COMMAND_AIRPLANE_ELEVATOR_UP,
	COMMAND_AIRPLANE_ELEVATOR_UP_RELEASE,
	COMMAND_AIRPLANE_ELEVATOR_DOWN,
	COMMAND_AIRPLANE_ELEVATOR_DOWN_RELEASE,
	COMMAND_AIRPLANE_THROTTLE_INCREASE,
	COMMAND_AIRPLANE_THROTTLE_INCREASE_RELEASE,
	COMMAND_AIRPLANE_THROTTLE_DECREASE,
	COMMAND_AIRPLANE_THROTTLE_DECREASE_RELEASE,

	COMMAND_AIRPLANE_FLAPS,
	COMMAND_AIRPLANE_GEARS,

	COMMAND_CAMERA_WORLD_POINT = 50,
	COMMAND_CAMERA_OBJECT_POSITION,
	COMMAND_CAMERA_OBJECT_TRANSFORM,

	COMMAND_MAX
};

struct AxisCommand
{
	AxisCommand(Command commandIn, float valueIn) : command(commandIn), value(valueIn) {;}
	Command command;
	float	value;
};

}

}

#endif _InputOIS_Commands_hpp_